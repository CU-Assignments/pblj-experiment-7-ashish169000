import java.sql.*;
import java.util.*;

class Student {
    private int studentID;
    private String name;
    private String department;
    private int marks;

    public Student(int studentID, String name, String department, int marks) {
        this.studentID = studentID;
        this.name = name;
        this.department = department;
        this.marks = marks;
    }

    public int getStudentID() { return studentID; }
    public String getName() { return name; }
    public String getDepartment() { return department; }
    public int getMarks() { return marks; }
}

class StudentController {
    private final Connection conn;

    public StudentController() throws SQLException {
        conn = DriverManager.getConnection(
            "jdbc:mysql://localhost:3306/your_database", "root", "your_password");
    }

    public void addStudent(Student s) throws SQLException {
        PreparedStatement ps = conn.prepareStatement("INSERT INTO Student VALUES (?, ?, ?, ?)");
        ps.setInt(1, s.getStudentID());
        ps.setString(2, s.getName());
        ps.setString(3, s.getDepartment());
        ps.setInt(4, s.getMarks());
        ps.executeUpdate();
    }

    public List<Student> getAllStudents() throws SQLException {
        List<Student> list = new ArrayList<>();
        ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM Student");
        while (rs.next()) {
            list.add(new Student(
                rs.getInt("StudentID"),
                rs.getString("Name"),
                rs.getString("Department"),
                rs.getInt("Marks")));
        }
        return list;
    }

    public void updateStudent(Student s) throws SQLException {
        PreparedStatement ps = conn.prepareStatement(
            "UPDATE Student SET Name=?, Department=?, Marks=? WHERE StudentID=?");
        ps.setString(1, s.getName());
        ps.setString(2, s.getDepartment());
        ps.setInt(3, s.getMarks());
        ps.setInt(4, s.getStudentID());
        ps.executeUpdate();
    }

    public void deleteStudent(int id) throws SQLException {
        PreparedStatement ps = conn.prepareStatement("DELETE FROM Student WHERE StudentID=?");
        ps.setInt(1, id);
        ps.executeUpdate();
    }
}

public class StudentManagement {
    public static void main(String[] args) {
        try {
            StudentController controller = new StudentController();
            Scanner sc = new Scanner(System.in);

            while (true) {
                System.out.println("\n1. Add Student\n2. View All\n3. Update\n4. Delete\n5. Exit");
                System.out.print("Enter choice: ");
                int ch = sc.nextInt();

                switch (ch) {
                    case 1 -> {
                        System.out.print("Enter ID, Name, Dept, Marks: ");
                        int id = sc.nextInt();
                        String name = sc.next();
                        String dept = sc.next();
                        int marks = sc.nextInt();
                        controller.addStudent(new Student(id, name, dept, marks));
                        System.out.println("Student added.");
                    }
                    case 2 -> {
                        List<Student> list = controller.getAllStudents();
                        for (Student s : list) {
                            System.out.printf("%d %s %s %d\n", s.getStudentID(), s.getName(), s.getDepartment(), s.getMarks());
                        }
                    }
                    case 3 -> {
                        System.out.print("Enter ID to update: ");
                        int id = sc.nextInt();
                        System.out.print("New Name, Dept, Marks: ");
                        String name = sc.next();
                        String dept = sc.next();
                        int marks = sc.nextInt();
                        controller.updateStudent(new Student(id, name, dept, marks));
                        System.out.println("Student updated.");
                    }
                    case 4 -> {
                        System.out.print("Enter ID to delete: ");
                        int id = sc.nextInt();
                        controller.deleteStudent(id);
                        System.out.println("Student deleted.");
                    }
                    case 5 -> {
                        System.out.println("Exiting...");
                        return;
                    }
                    default -> System.out.println("Invalid choice.");
                }
            }
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
}
